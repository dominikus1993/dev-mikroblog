// <auto-generated />
using System;
using DevMikroblog.Modules.Posts.Infrastructure.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DevMikroblog.Modules.Posts.Infrastructure.Migrations
{
    [DbContext(typeof(PostDbContext))]
    partial class PostDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DevMikroblog.Modules.Posts.Domain.Model.Post", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("content");

                    b.Property<long>("CreatedAt")
                        .HasColumnType("bigint")
                        .HasColumnName("created_at");

                    b.Property<long?>("DeletedAt")
                        .HasColumnType("bigint")
                        .HasColumnName("deleted_at");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<long>("Likes")
                        .HasColumnType("bigint")
                        .HasColumnName("likes");

                    b.Property<long>("RepliesQuantity")
                        .HasColumnType("bigint")
                        .HasColumnName("replies_quantity");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea")
                        .HasColumnName("row_version");

                    b.Property<string[]>("Tags")
                        .HasColumnType("jsonb")
                        .HasColumnName("tags");

                    b.Property<long>("Version")
                        .HasColumnType("bigint")
                        .HasColumnName("version");

                    b.HasKey("Id")
                        .HasName("pk_posts");

                    b.HasIndex(new[] { "Tags" }, "tags")
                        .HasDatabaseName("ix_posts_tags")
                        .HasAnnotation("Npgsql:TsVectorConfig", "english");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex(new[] { "Tags" }, "tags"), "GIN");

                    b.ToTable("posts", (string)null);
                });

            modelBuilder.Entity("DevMikroblog.Modules.Posts.Domain.Model.Post", b =>
                {
                    b.OwnsOne("DevMikroblog.Modules.Posts.Domain.Model.Author", "Author", b1 =>
                        {
                            b1.Property<Guid>("PostId")
                                .HasColumnType("uuid")
                                .HasColumnName("id");

                            b1.Property<Guid>("Id")
                                .HasColumnType("uuid")
                                .HasColumnName("author_id");

                            b1.Property<string>("Name")
                                .HasColumnType("text")
                                .HasColumnName("author_name");

                            b1.HasKey("PostId");

                            b1.ToTable("posts");

                            b1.WithOwner()
                                .HasForeignKey("PostId")
                                .HasConstraintName("fk_posts_posts_id");
                        });

                    b.OwnsOne("DevMikroblog.Modules.Posts.Domain.Model.ReplyToPost", "ReplyTo", b1 =>
                        {
                            b1.Property<Guid>("PostId")
                                .HasColumnType("uuid")
                                .HasColumnName("id");

                            b1.Property<Guid>("Id")
                                .HasColumnType("uuid")
                                .HasColumnName("reply_to_id");

                            b1.HasKey("PostId");

                            b1.ToTable("posts");

                            b1.WithOwner()
                                .HasForeignKey("PostId")
                                .HasConstraintName("fk_posts_posts_id");
                        });

                    b.Navigation("Author")
                        .IsRequired();

                    b.Navigation("ReplyTo");
                });
#pragma warning restore 612, 618
        }
    }
}
